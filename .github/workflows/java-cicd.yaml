name: Spring Boot CICD

# Trigger the workflow on push and pull_request events
on:
  push:
    branches:
      - main  # Trigger on changes to the main branch

# Define the jobs in the workflow
jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: spring_boot_crud
          MYSQL_PASSWORD: rootroot
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      # Step 1: Check out the code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Java (OpenJDK 11) on the runner
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          java-package: jdk
          architecture: x64
          distribution: 'zulu'   # This is the missing input
          check-latest: false
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: GITHUB_TOKEN
          overwrite-settings: true

      # Step 3: Build the project using Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests=false  # Skips tests during build (can adjust based on needs)
        working-directory: Spring-Boot-CRUD
      # Step 4: Run unit tests
      #- name: Run tests
      #  run: mvn test  # Run the tests using Maven

      # Optional Step 5: Build a Docker image (if you want to create a Docker image)
      - name: Build Docker image
        run: |
          docker build -t spring-boot-app .
          docker images  # List images for debugging
